const md5 = require('md5');
const cfg = require('configuration');
var orm = require("orm");

orm.connect("sqlite://database", function(err, db) {
	if (err){ console.log(err); return; }

	var Player = db.define("player", {
		login   	: { type: "text", size: 32, unique: true },
		password	: { type: "text", size: 32 },
		nick    	: { type: "text" },
		gold 		: { type: "number", defaultValue: 0 },
		lastMining	: { type: "number" },
		level		: { type: "number", defaultValue: 1 }
	}, {
		methods: {
			updateLastMining: function(){
				this.lastMining = Date.now()/1000;
			},
			mine: function(){

			},
			createPickaxe: function(){

			}
		}, validations: {

		}
	});

	Player.register = function(login, password, callback){
		this.one({login: login}, function(err, player){
			if (err){ console.log(err); return; }
		});
	}

	Player.connect = function(login, password, callback){
		this.one({login: login, password: md5(login+password)}, function(err, player){
			if (err){ console.log(err); return; }
		});
	}

	var Pickaxe = db.define("pickaxe", {
		name			: { type: "text", size: 32},
		power			: { type: "number" },
		maxDurability	: { type: "number" },
		durability		: { type: "number" },
	}, {
		methods: {
			
		}, validations: {

		}
	});

	Pickaxe.hasOne("player", Player, {reverse: "pickaxes"});


	db.sync(function(err) {
		if (err) throw err;

	});
});