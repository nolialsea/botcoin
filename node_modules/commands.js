const cfg = require('configuration');
const bl = require('businesslayer');

function output(args){
	/*output(nick, message)*/
	if (arguments.length === 2){
		bl.say(arguments[0], arguments[1]);
	}
	/*output(message)*/
	else if (arguments.length === 1){
		bl.say(cfg.channels[0], arguments[0]);
	}
}

let connect = function(nick, msg){
	if (msg.match(/^connect/i)){
		let reg = new RegExp("^connect ([^ ]*) ([^ ]*$)","i")
		let res = msg.match(reg);
		if (res){
			if (res.length === 3){
				let login = res[1];
				let password = res[2];
				bl.Player.connect(nick, login, password);
			}else{
				output(nick, "You don't use this command correctly.");
			}
		}else{
			reg = new RegExp("^connected","i");
			res = msg.match(reg);
			if (res){
				bl.Player.isConnected(nick, function(isConnected){
					if (isConnected){
						output(nick, "You are connected");
					}else{
						output(nick, "You are not connected");
					}
				});
			}
		}
	}
}

let register = function(nick, msg){
	if (msg.match(/^register/i)){
		let reg = new RegExp("^register ([^ ]*) ([^ ]*$)","i")
		let res = msg.match(reg);
		if (res){
			if (res.length === 3){
				let login = res[1];
				let password = res[2];
				bl.Player.register(nick, login, password);
			}else{
				output(nick, "You don't use this command correctly.");
			}
		}
	}
}

let mine = function(nick, msg){
	if (msg.match(/^mine/i)){
		reg = new RegExp("^mine ([0-9]*)[ ]*([smh])?","i");
		res = msg.match(reg);
		if (res){
			console.log(res);
			let duration = res[1];
			if (duration !== undefined){
				//Time scale
				if (res[2] !== undefined){
					duration *= 
						res[2] === "d" ? 86400 :
						res[2] === "h" ? 3600 :
						res[2] === "m" ? 60 :
						res[2] === "s" ? 1 :
						60;
				}else{
					//Default in minutes
					duration *= 60;
				}
				bl.Player.mine(nick, duration);
			}else{
				output(nick, "Use like this : \"mine 1h\", \"mine 60\", \"mine 60m\", \"mine 3600s\"");
			}
		}else{
			output(nick, "You don't use this command correctly.");
		}
	}
}

let createPickaxe = function(nick, msg){
	
}

let upgradePickaxe = function(nick, msg){
	
}

let repairPickaxe = function(nick, msg){
	
}

let showGold = function(nick, msg){
	
}

let showPickaxe = function(nick, msg){
	
}

let showHelp = function(nick, msg){
	if (msg.match(/^help/i)){
		output(nick, "https://github.com/nolialsea/botcoin");
	}
}

let showLevel = function(nick, msg){
	
}

let train = function(nick, msg){
	
}

let randomize = function(nick, msg){
	
}

let parse = function(from, message){
	connect(from, message);
	register(from, message);
	mine(from, message);
	createPickaxe(from, message);
	upgradePickaxe(from, message);
	repairPickaxe(from, message);
	showGold(from, message);
	showPickaxe(from, message);
	showLevel(from, message);
	showHelp(from, message);
	train(from, message);
	randomize(from, message);
}

module.exports.parse = parse;
