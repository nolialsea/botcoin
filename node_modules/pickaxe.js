const cfg = require('configuration');
const db = require('database');

db.run("CREATE TABLE IF NOT EXISTS Pickaxe "+
	"(name TEXT, power REAL, maxDurability REAL, durability REAL, upgrade INTEGER,"+
	"repair INTEGER, totalInvestment REAL, totalGoldMined REAL, userId INTEGER)");

const Pickaxe = {
	create: function(userId, name, power, durability, investment){
		db.serialize(function(){
			Pickaxe.delete(userId);
			db.run("INSERT INTO Pickaxe (name, power, maxDurability, durability, upgrade, repair, totalInvestment, totalGoldMined, userId)"+
				"VALUES ($name, $power, $durability, $durability, 0, 0, $investment, 0, $userId)", {
				$name: name,
				$power: power,
				$durability: durability,
				$investment: investment,
				$userId: userId
			});
		});
	},

	getByUserId: function(userId, callback){
		db.get("SELECT rowid AS id, name, power, durability, maxDurability, upgrade, repair, totalInvestment, totalGoldMined FROM Pickaxe WHERE userId=?", userId, function(err, row) {
			callback(row);
		});
	},

	delete: function(userId){	//Does not actually delete, on purpose for later
		db.run("UPDATE Pickaxe SET userId=0 WHERE userId=?", userId);
	},

	damage: function(userId, damage){
		db.run("UPDATE Pickaxe SET durability=durability-$damage WHERE userId=$userId", {$userId: userId, $damage: damage});
	},

	upgrade: function(userId, power, durability, investment){
		db.run("UPDATE Pickaxe SET power=power+$power, maxDurability=maxDurability+$durability, totalInvestment=totalInvestment+$investment, upgrade=upgrade+1 WHERE userId=$userId", 
			{
				$userId: userId,
				$power: power,
				$durability: durability,
				$investment: investment
			}
		);
	},

	repair: function(userId, amount, investment){
		db.run("UPDATE Pickaxe SET durability=min(durability+$durability, maxDurability), totalInvestment=totalInvestment+$investment, repair=repair+1 WHERE userId=$userId",
			{
				$userId: userId,
				$durability: amount,
				$investment: investment
			}
		);
	},

	recycle: function(userId){
		
	},

	addToTotalGoldMined: function(userId, goldMined){
		db.run("UPDATE Pickaxe SET totalGoldMined=totalGoldMined+$goldMined WHERE userId=$userId",
			{
				$userId: userId,
				$goldMined: goldMined
			}
		);
	},

	getMinimumRemainingMiningTime: function(pickaxe){
		return pickaxe.durability / (pickaxe.power*cfg.damageRatio);
	}
}

module.exports = Pickaxe;